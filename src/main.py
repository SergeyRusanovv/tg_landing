from fastapi import FastAPI, Request, Form
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from config import AppConfig

import smtplib
from email.message import EmailMessage


app = FastAPI()
app.mount("/static", StaticFiles(directory="static"), name="static")

templates = Jinja2Templates(directory="templates")


@app.get(path="/")
async def index(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})


@app.post("/submit")
async def submit(
    first_name: str = Form(...),
    last_name: str = Form(...),
    email: str = Form(...),
    phone: str = Form(None),
    telegram: str = Form(None)
):
    send_email = EmailMessage()
    send_email["Subject"] = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"
    send_email["From"] = AppConfig.SMTP_USER
    send_email["To"] = email
    send_email['Disposition-Notification-To'] = AppConfig.SMTP_USER

    phone_number = phone if phone else "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    telegram_url = telegram if telegram else "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º"

    send_email.set_content(
        "<div>"
        f'<h1 style="color: red;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! {first_name} {last_name} üòä</h1><p>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∫–ª–∞–º—ã –ø–æ–ª—É—á–µ–Ω—ã. '
        f'Email: {email}, –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}, –°—Å—ã–ª–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º: {telegram_url}</p></div>',
        subtype="html",
    )

    with smtplib.SMTP_SSL(AppConfig.SMTP_HOST, AppConfig.SMTP_PORT) as server:
        server.login(AppConfig.SMTP_USER, AppConfig.SMTP_PASSWORD)
        server.send_message(send_email)

    return {"message": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!"}
